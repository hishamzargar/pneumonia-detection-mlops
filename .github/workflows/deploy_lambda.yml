name: Deploy Pneumonia Lambda to AWS (Private ECR)

on:
  push:
    branches:
      - main

env:
  AWS_REGION: "us-east-1"          
  ECR_REPOSITORY_NAME: pneumonia-detection-repository
  LAMBDA_FUNCTION_NAME: "PneumoniaDetectionFunction"
  DOCKER_IMAGE_NAME: "pneumonia-lambda-x86-64" 

jobs:
  build-and-deploy:
    name: Build, Push to Private ECR, and Deploy to Lambda
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR (Private)
        id: login-ecr-private
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR (Private)
        id: build-image
        env:
          # Use the registry output from the login step
          ECR_REGISTRY: ${{ steps.login-ecr-private.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          ECR_REPOSITORY_URI="${ECR_REGISTRY}/${{ env.ECR_REPOSITORY_NAME }}"
          
          echo "Building Docker image: ${{ env.DOCKER_IMAGE_NAME }}"
          docker build -t ${{ env.DOCKER_IMAGE_NAME }} ./app_lambda/
          
          echo "Tagging image for ECR: ${ECR_REPOSITORY_URI}:${IMAGE_TAG}"
          docker tag ${{ env.DOCKER_IMAGE_NAME }}:latest ${ECR_REPOSITORY_URI}:${IMAGE_TAG}
          docker tag ${{ env.DOCKER_IMAGE_NAME }}:latest ${ECR_REPOSITORY_URI}:latest # Also push 'latest'
          
          echo "Pushing image to ECR: ${ECR_REPOSITORY_URI}:${IMAGE_TAG}"
          docker push ${ECR_REPOSITORY_URI}:${IMAGE_TAG}
          echo "Pushing image to ECR: ${ECR_REPOSITORY_URI}:latest"
          docker push ${ECR_REPOSITORY_URI}:latest
          
          # Set the output for the next job/step
          echo "image_uri=${ECR_REPOSITORY_URI}:${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Update Lambda function code
        run: |
          echo "Updating Lambda function ${{ env.LAMBDA_FUNCTION_NAME }} with image URI: ${{ steps.build-image.outputs.image_uri }}"
          aws lambda update-function-code \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --image-uri ${{ steps.build-image.outputs.image_uri }}